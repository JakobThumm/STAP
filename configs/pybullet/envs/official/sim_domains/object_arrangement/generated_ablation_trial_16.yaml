# Make sure that the blue box and the cyan box are left of the red box.
env: pybullet.HumanTableEnv
env_kwargs:
  name: ablation_task_3
  gui: true

  primitives:
    - pick
    - place
    - static_handover

  tasks:
    - action_skeleton:
        - pick(blue_box, table)
        - place(blue_box, table)
        - pick(cyan_box, table)
        - place(cyan_box, table)
      evaluation_fns:
        - null
        - LeftOfRedBoxFn
        - null
        - LeftOfRedBoxFn
      initial_state:
        - free(cyan_box)
        - on(cyan_box, table
        - graspable(cyan_box)
        - free(red_box)
        - on(red_box, table
        - graspable(red_box)
        - free(blue_box)
        - on(blue_box, table
        - graspable(blue_box)
      instruction: "Make sure that the blue box and the cyan box are left of the red box."
      custom_fns:
        - null
        - LeftOfRedBoxFn_trial_16
        - null
        - LeftOfRedBoxFn_trial_16
      
      
      
        
  robot_config: configs/pybullet/envs/robots/safe_fr3_sim.yaml
  human_config: configs/pybullet/envs/humans/average_male_TUM.yaml
  animation_type: HumanRobotHandover
  animation_frequency: 100
  animation_initializations: configs/pybullet/envs/humans/animation_initializations_far_away.yaml
  visualize_shield: false

  objects:
    - object_type: Urdf
      object_kwargs:
        name: table
        path: configs/pybullet/envs/assets/asl_table.urdf
        is_static: true
    - configs/pybullet/envs/assets/milk.yaml
    - configs/pybullet/envs/assets/icecream.yaml
    - configs/pybullet/envs/assets/salt.yaml
