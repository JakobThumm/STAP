# Example Config that uses almost all values

alg: SAC
alg_kwargs:
  tau: 0.005
  init_temperature: 0.1
  critic_freq: 1
  actor_freq: 1
  target_freq: 2
  init_steps: 5000

optim: Adam
optim_kwargs:
  lr: 0.0001

network: ActorCriticPolicy
network_kwargs:
  actor_class: DiagonalGaussianMLPActor
  actor_kwargs:
    hidden_layers: [256, 256]
    log_std_bounds: [-5, 2]
  critic_class: ContinuousMLPCritic
  critic_kwargs:
    hidden_layers: [256, 256]
    num_q_fns: 2
  ortho_init: true

batch_size: null # Use serial replay buffer
collate_fn: null # The collate function passed to the dataloader. None uses pytorch default.
checkpoint: null # A checkpoint to initialize the network from.

env: PushLeft2DControl-v0
env_kwargs:
  max_episode_steps: 1000
  steps_per_action: 1
  config: configs/pybox2d/envs/obstacle.yaml
  rand_params:
    obstacle:
      shape_kwargs:
        dx: [0.0, 5.0]
    item:
      shape_kwargs:
        dx: [0.0, 5.0]
      body_kwargs:
        angle: [-1.57, 1.57]
  control_kwargs: 
    kp: 2
    kd: 2
    ki: 0.05
    overshoot_reset: True
  
dataset: ReplayBuffer
dataset_kwargs:
  capacity: 1000000
  batch_size: 1024
  sample_strategy: uniform
  save_frequency: 1000

processor: null

train_kwargs: # Arguments given to Algorithm.train
  total_steps: 250000 # The total number of steps to train
  log_freq: 250 # How often to log values
  eval_freq: 10000 # How often to run evals
  eval_ep: 10 # Number of enviornment episodes to run for evaluation, or -1 if none should be run.
  loss_metric: reward # The validation metric that determines when to save the "best_checkpoint"
  workers: 0 # Number of dataloader workers.
  profile_freq: 50
